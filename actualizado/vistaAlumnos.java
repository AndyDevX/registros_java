/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto;

 // @author Andrés Ayuso
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.ResultSet;
import java.util.EventObject;
import javax.swing.DefaultCellEditor;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.*;

public class vistaAlumnos extends javax.swing.JFrame {
    DefaultTableModel modelo;
    int id_licenciatura;

    // Creates new form vistaAlumnos
    public vistaAlumnos() {
        initComponents();
        obtenerRegistros();
        itemLicenciaturas();
    }

    // This method is called from within the constructor to initialize the form.
    // WARNING: Do NOT modify this code. The content of this method is always
    // regenerated by the Form Editor.
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelDatos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Matricula = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        Nombres = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        JScrollPane3 = new javax.swing.JScrollPane();
        apellidoMaterno = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        apellidoPaterno = new javax.swing.JTextArea();
        selectLicenciatura = new javax.swing.JComboBox<>();
        Semestre = new javax.swing.JSpinner();
        panelAcciones = new javax.swing.JPanel();
        agregarRegistro = new javax.swing.JButton();
        editarRegistro = new javax.swing.JButton();
        eliminarRegistro = new javax.swing.JButton();
        nuevoRegistro = new javax.swing.JButton();
        panelRegistros = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        alumnos = new javax.swing.JTable();
        regresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro de asistencias - Control de alumnos");
        setResizable(false);

        panelDatos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Datos del alumno"));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Matrícula"));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        Matricula.setColumns(20);
        Matricula.setRows(5);
        Matricula.setEnabled(false);
        jScrollPane1.setViewportView(Matricula);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Nombre/s"));
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        Nombres.setColumns(20);
        Nombres.setRows(5);
        Nombres.setEnabled(false);
        jScrollPane2.setViewportView(Nombres);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(214, 217, 223)), "Apellidos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        JScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Materno"));
        JScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        JScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        apellidoMaterno.setColumns(20);
        apellidoMaterno.setRows(5);
        apellidoMaterno.setEnabled(false);
        JScrollPane3.setViewportView(apellidoMaterno);

        jScrollPane4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Paterno"));
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        apellidoPaterno.setColumns(20);
        apellidoPaterno.setRows(5);
        apellidoPaterno.setEnabled(false);
        jScrollPane4.setViewportView(apellidoPaterno);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                .addComponent(JScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 7, Short.MAX_VALUE))
        );

        selectLicenciatura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Licenciatura" }));
        selectLicenciatura.setBorder(null);
        selectLicenciatura.setEnabled(false);
        selectLicenciatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectLicenciaturaActionPerformed(evt);
            }
        });

        Semestre.setModel(new javax.swing.SpinnerNumberModel(1, 1, 8, 1));
        Semestre.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(214, 217, 223)), "Semestre"));
        Semestre.setEnabled(false);

        javax.swing.GroupLayout panelDatosLayout = new javax.swing.GroupLayout(panelDatos);
        panelDatos.setLayout(panelDatosLayout);
        panelDatosLayout.setHorizontalGroup(
            panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosLayout.createSequentialGroup()
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDatosLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatosLayout.createSequentialGroup()
                                .addComponent(Semestre, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(selectLicenciatura, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        panelDatosLayout.setVerticalGroup(
            panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectLicenciatura, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(Semestre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        panelAcciones.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Acciones"));

        agregarRegistro.setText("Agregar");
        agregarRegistro.setEnabled(false);
        agregarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarRegistroActionPerformed(evt);
            }
        });

        editarRegistro.setText("Actualizar");
        editarRegistro.setEnabled(false);
        editarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarRegistroActionPerformed(evt);
            }
        });

        eliminarRegistro.setText("Eliminar");
        eliminarRegistro.setEnabled(false);
        eliminarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarRegistroActionPerformed(evt);
            }
        });

        nuevoRegistro.setText("Nuevo registro");
        nuevoRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoRegistroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAccionesLayout = new javax.swing.GroupLayout(panelAcciones);
        panelAcciones.setLayout(panelAccionesLayout);
        panelAccionesLayout.setHorizontalGroup(
            panelAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAccionesLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(agregarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(editarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(eliminarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(nuevoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        panelAccionesLayout.setVerticalGroup(
            panelAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAccionesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eliminarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nuevoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        panelRegistros.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Registros"));

        alumnos.setAutoCreateRowSorter(true);
        alumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "matricula", "nombre", "apellido_p", "apellido_m", "semestre", "licenciatura"
            }
        ));
        alumnos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        alumnos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        alumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                alumnosMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(alumnos);

        javax.swing.GroupLayout panelRegistrosLayout = new javax.swing.GroupLayout(panelRegistros);
        panelRegistros.setLayout(panelRegistrosLayout);
        panelRegistrosLayout.setHorizontalGroup(
            panelRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRegistrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5)
                .addContainerGap())
        );
        panelRegistrosLayout.setVerticalGroup(
            panelRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRegistrosLayout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        regresar.setBackground(new java.awt.Color(40, 40, 40));
        regresar.setForeground(new java.awt.Color(220, 229, 238));
        regresar.setText("Regresar");
        regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(regresar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(panelDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelAcciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelRegistros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(panelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelAcciones, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelRegistros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(regresar)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void agregarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarRegistroActionPerformed
        String matricula = Matricula.getText();
        String nombre = Nombres.getText();
        String apellido_p = apellidoPaterno.getText();
        String apellido_m = apellidoMaterno.getText();
        int semestre = (int) Semestre.getValue();
        
        String sql = "INSERT INTO alumnos (matricula, nombre, apellido_p, apellido_m, semestre, id_licenciatura) VALUES ('"+ matricula +"', '"+ nombre +"', '"+ apellido_p +"', '"+ apellido_m +"', "+ semestre +", "+ id_licenciatura +")";
        System.out.println(sql);
        try {
            if (matricula.equals("") || nombre.equals("") || apellido_p.equals("") || apellido_m.equals("") || semestre < 1 || id_licenciatura < 1) {
                JOptionPane.showMessageDialog(null, "Falta algún dato");
                clearTable();
            }
            else {
                Consulta cons = new Consulta();
                cons.conectar();
                cons.agregarRegistro(sql);
                
                JOptionPane.showMessageDialog(null, "Alumno agregado");
                
                agregarRegistro.setEnabled(false);
                nuevoRegistro.setEnabled(true);
                
                Nombres.setText(null);
                apellidoPaterno.setText(null);
                apellidoMaterno.setText(null);
                Matricula.setText(null);
                Semestre.setValue(1);
                selectLicenciatura.setSelectedIndex(0);
                
                Matricula.setEnabled(false);
                Nombres.setEnabled(false);
                apellidoPaterno.setEnabled(false);
                apellidoMaterno.setEnabled(false);
                Semestre.setEnabled(false);
                selectLicenciatura.setEnabled(false);
                
                clearTable();
            }
            
        } catch (Exception e) {
            System.out.println("Hubo un error: "+e.getMessage());
        }
        
        obtenerRegistros();
        alumnos.setEnabled(true);
        
    }//GEN-LAST:event_agregarRegistroActionPerformed

    private void regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarActionPerformed
        close();
        menu menu = new menu();
        menu.setVisible(true);
    }//GEN-LAST:event_regresarActionPerformed

    private void nuevoRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoRegistroActionPerformed
        alumnos.setEnabled(false);
        agregarRegistro.setEnabled(true);
        nuevoRegistro.setEnabled(false);
        editarRegistro.setEnabled(false);
        
        // Habilitamos los inputs
        Matricula.setEnabled(true);
        Nombres.setEnabled(true);
        apellidoPaterno.setEnabled(true);
        apellidoMaterno.setEnabled(true);
        Semestre.setEnabled(true);
        selectLicenciatura.setEnabled(true);
        
        Matricula.setText(null);
        Nombres.setText(null);
        apellidoPaterno.setText(null);
        apellidoMaterno.setText(null);
        Semestre.setValue(1);
        selectLicenciatura.setSelectedIndex(0);
    }//GEN-LAST:event_nuevoRegistroActionPerformed

    private void selectLicenciaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectLicenciaturaActionPerformed
        String lic = (String) selectLicenciatura.getSelectedItem();
        String sql = "SELECT id_licenciatura FROM cat_licenciaturas WHERE licenciatura = '"+lic+"';";
        Consulta cons = new Consulta();
        
        try {
            cons.conectar();
            ResultSet resultado = cons.ejecutarConsulta(sql);
            
            if (resultado.next()) {
                int idLicenciatura = resultado.getInt("id_licenciatura");
                id_licenciatura = idLicenciatura;
            } else {
                System.out.println("No se encontró ninguna licenciatura con ese nombre.");
            }
            
        } catch (Exception e) {
            System.out.println("Hubo un error con el ID");
        }
    }//GEN-LAST:event_selectLicenciaturaActionPerformed

    private void alumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_alumnosMouseClicked
        int fila = alumnos.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "No se seleccionó ningún alumno");
        }
        else {
            String matricula = (String) alumnos.getValueAt(fila, 0);
            String nombre = (String) alumnos.getValueAt(fila, 1);
            String apellido_p = (String) alumnos.getValueAt(fila, 2);
            String apellido_m = (String) alumnos.getValueAt(fila, 3);
            int semestre = Integer.parseInt((String) alumnos.getValueAt(fila, 4) .toString());
            String licenciatura = (String) alumnos.getValueAt(fila, 5);
            
            Matricula.setText(matricula);
            Nombres.setText(nombre);
            Nombres.setEnabled(true);
            apellidoPaterno.setText(apellido_p);
            apellidoPaterno.setEnabled(true);
            apellidoMaterno.setText(apellido_m);
            apellidoMaterno.setEnabled(true);
            Semestre.setValue(semestre);
            Semestre.setEnabled(true);
            selectLicenciatura.setSelectedItem(licenciatura);
            selectLicenciatura.setEnabled(true);
            
            editarRegistro.setEnabled(true);
            eliminarRegistro.setEnabled(true);
        }
    }//GEN-LAST:event_alumnosMouseClicked

    private void editarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarRegistroActionPerformed
        Actualizar();
        obtenerRegistros();
        editarRegistro.setEnabled(false);
    }//GEN-LAST:event_editarRegistroActionPerformed

    private void eliminarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarRegistroActionPerformed
        String matricula = Matricula.getText();
        Eliminar(matricula);
        obtenerRegistros();
        eliminarRegistro.setEnabled(false);
        editarRegistro.setEnabled(false);
        
        Matricula.setText(null);
        Nombres.setText(null);
        apellidoPaterno.setText(null);
        apellidoMaterno.setText(null);
        Semestre.setValue(1);
        selectLicenciatura.setSelectedIndex(0);
        
        Matricula.setEnabled(false);
        Nombres.setEnabled(false);
        apellidoPaterno.setEnabled(false);
        apellidoMaterno.setEnabled(false);
        Semestre.setEnabled(false);
        selectLicenciatura.setEnabled(false);
    }//GEN-LAST:event_eliminarRegistroActionPerformed

    // @param args the command line arguments
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vistaAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vistaAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vistaAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vistaAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new vistaAlumnos().setVisible(true);
            }
        });
    }
    
// Metodos propios
    public void Eliminar(String matricula) {
        int fila = alumnos.getSelectedRow();
        
        try {
            if (fila < 0) {
                JOptionPane.showMessageDialog(null, "Alumno eliminado");
                clearTable();
            }
            else {
                String sql = "DELETE FROM alumnos WHERE matricula = '"+ matricula +"'";
                System.out.println(sql);
                
                Consulta cons = new Consulta();
                cons.conectar();
                cons.agregarRegistro(sql);
                
                JOptionPane.showMessageDialog(null, "Alumno eliminado");
                clearTable();
            }
            
        } catch (Exception e) {
            System.out.println("Hubo en error al eliminar");
        }
    }
    
    public void Actualizar() {
        String matricula = Matricula.getText();
        String nombre = Nombres.getText();
        String apellido_p = apellidoPaterno.getText();
        String apellido_m = apellidoMaterno.getText();
        int semestre = (int) Semestre.getValue();
        
        String sql = "UPDATE alumnos SET nombre = '"+ nombre +"', apellido_p = '"+ apellido_p +"', apellido_m = '"+ apellido_m +"', semestre = "+ semestre +", id_licenciatura = "+ id_licenciatura +" WHERE matricula = '"+ matricula +"';";
        System.out.println(sql);
        try {
            if (matricula.equals("") || nombre.equals("") || apellido_p.equals("") || apellido_m.equals("") || semestre < 1 || id_licenciatura < 1) {
                JOptionPane.showMessageDialog(null, "Falta algún dato");
                clearTable();
            }
            else {
                Consulta cons = new Consulta();
                cons.conectar();
                cons.agregarRegistro(sql);
                
                JOptionPane.showMessageDialog(null, "Alumno actualizado");
                
                agregarRegistro.setEnabled(false);
                nuevoRegistro.setEnabled(true);
                
                Nombres.setText(null);
                apellidoPaterno.setText(null);
                apellidoMaterno.setText(null);
                Matricula.setText(null);
                Semestre.setValue(1);
                selectLicenciatura.setSelectedIndex(0);
                
                
                clearTable();
            }
            
        } catch (Exception e) {
            System.out.println("Hubo un error: "+e.getMessage());
        }
    }
    
    public void itemLicenciaturas () {
        String query = "SELECT * FROM cat_licenciaturas";
        
        try {
            Consulta cons = new Consulta();
            cons.conectar();
            ResultSet resultado = cons.ejecutarConsulta(query);
            
            while (resultado.next()) {
                selectLicenciatura.addItem(resultado.getString("licenciatura"));
            }
            cons.desconectar();
            
        } catch (Exception e) {
            System.out.println("Hubo un error: " + e.getMessage());
        }
    }
    
    public void close () {
        WindowEvent closeWindow = new WindowEvent (this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }
    
    public void obtenerRegistros () {
        String query = "SELECT A.*, L.licenciatura FROM alumnos A JOIN cat_licenciaturas L ON A.id_licenciatura = L.id_licenciatura";
        
        try {
            Consulta cons = new Consulta();
            
            cons.conectar();
            ResultSet resultado = cons.ejecutarConsulta(query);
            Object[] alumno = new Object[6];
            modelo = (DefaultTableModel) alumnos.getModel();
            
            while (resultado.next()) {
                alumno[0] = resultado.getString("matricula");
                alumno[1] = resultado.getString("nombre");
                alumno[2] = resultado.getString("apellido_p");
                alumno[3] = resultado.getString("apellido_m");
                alumno[4] = resultado.getInt("semestre");
                alumno[5] = resultado.getString("licenciatura");
                
                modelo.addRow(alumno);
            }
            
            // Deshabilitamos la edición de las celdas
            TableCellEditor nonEditableEditor = new DefaultCellEditor(new JTextField()) {
                @Override
                public boolean isCellEditable(EventObject e) {
                    return false;
                }
            };
            alumnos.setDefaultEditor(Object.class, nonEditableEditor);
        
            alumnos.setModel(modelo);
            cons.desconectar();
            
        } catch (Exception e) {
            System.out.println("Hubo un error");
        }
    }
    
    public void clearTable () {
        for (int i = 0; i <= alumnos.getRowCount(); i++) {
            modelo.removeRow(i);
            i = i - 1;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane JScrollPane3;
    private javax.swing.JTextArea Matricula;
    private javax.swing.JTextArea Nombres;
    private javax.swing.JSpinner Semestre;
    private javax.swing.JButton agregarRegistro;
    private javax.swing.JTable alumnos;
    private javax.swing.JTextArea apellidoMaterno;
    private javax.swing.JTextArea apellidoPaterno;
    private javax.swing.JButton editarRegistro;
    private javax.swing.JButton eliminarRegistro;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton nuevoRegistro;
    private javax.swing.JPanel panelAcciones;
    private javax.swing.JPanel panelDatos;
    private javax.swing.JPanel panelRegistros;
    private javax.swing.JButton regresar;
    private javax.swing.JComboBox<String> selectLicenciatura;
    // End of variables declaration//GEN-END:variables
}
